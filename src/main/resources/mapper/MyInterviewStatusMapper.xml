<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sipc.mmtbackend.mapper.customization.MyInterviewStatusMapper">
    <select id="selectByAdmissionId" resultType="com.sipc.mmtbackend.pojo.domain.InterviewStatus">
        select *
        from interview_status
        where admission_id = #{admissionId, jdbcType=INTEGER}
    </select>

    <select id="selectOrganizationOrderCountByAdmissionId" resultType="com.sipc.mmtbackend.pojo.domain.po.GroupIntCountPo">
        select organization_order as id, COUNT(id) as count
        from interview_status
        where admission_id = #{admissionId, jdbcType=INTEGER}
        group by organization_order
        order by organization_order
    </select>

    <select id="selectDepartmentOrderCountByAdmissionId" resultType="com.sipc.mmtbackend.pojo.domain.po.GroupIntCountPo">
        select department_order as id, COUNT(id) as count
        from interview_status
        where admission_id = #{admissionId, jdbcType=INTEGER}
        group by department_order
        order by department_order
    </select>

    <select id="selectDepartmentCountByAdmissionId" resultType="com.sipc.mmtbackend.pojo.domain.po.GroupIntCountPo">
        select department_id as id, COUNT(id) as count
        from interview_status
        where admission_id = #{admissionId, jdbcType=INTEGER}
        group by department_id
        order by department_id
    </select>

    <select id="selectNextTimeCountByAdmissionId" resultType="com.sipc.mmtbackend.pojo.domain.po.GroupLocalTimeCountPo">
        select start_time as id, COUNT(id) as count
        from interview_status
        where admission_id = #{admissionId, jdbcType=INTEGER}
        group by start_time
        order by start_time
    </select>

    <select id="selectAddressCountByAdmissionId" resultType="com.sipc.mmtbackend.pojo.domain.po.GroupIntCountPo">
        select admission_address_id as id, COUNT(id) as count
        from interview_status
        where admission_id = #{admissionId, jdbcType=INTEGER}
        group by admission_address_id
        order by admission_address_id
    </select>
    <select id="selectAllAndUserInfoByAdmissionIdLimit"
            resultType="com.sipc.mmtbackend.pojo.domain.po.MyInterviewStatusPo">
        select its.id, its.user_id, its.admission_address_id, its.start_time, its.end_time, its.state, its.sign_in_time,
               its.organization_order, its.department_order, its.admission_id, its.department_id, its.round,
               ui.student_id, ui.name, ui.major_class_id, ui.phone
        from interview_status as its
        left join user_info as ui on ui.id = its.user_id
        where admission_id = #{admissionId, jdbcType=INTEGER}
        limit #{start, jdbcType=INTEGER}, #{end, jdbcType=INTEGER}
    </select>
    <select id="selectByAdmissionIdAndUserInfo"
            resultType="com.sipc.mmtbackend.pojo.domain.po.MyInterviewStatusPo">
        select its.id, its.user_id, its.admission_address_id, its.start_time, its.end_time, its.state, its.sign_in_time,
               its.organization_order, its.department_order, its.admission_id, its.department_id, its.round,
               ui.student_id, ui.name, ui.major_class_id, ui.phone
        from interview_status as its
        left join user_info as ui on ui.id = its.user_id
        where admission_id = #{admissionId, jdbcType=INTEGER}
    </select>
    <select id="selectByAdmissionIdAndSift" parameterType="com.sipc.mmtbackend.pojo.dto.param.dataDashboard.SiftParam" resultType="com.sipc.mmtbackend.pojo.domain.po.MyInterviewStatusPo">
        select its.id, its.user_id, its.admission_address_id, its.start_time, its.end_time, its.state, its.sign_in_time,
        its.organization_order, its.department_order, its.admission_id, its.department_id, its.round,
        ui.student_id, ui.name, ui.major_class_id, ui.phone
        from interview_status as its
        left join user_info as ui on ui.id = its.user_id
        where admission_id = #{admissionId, jdbcType=INTEGER}
            <if test="siftParam.interviewRoundSift.size() != 0">
                and round in
                    <foreach collection="siftParam.interviewRoundSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            <if test="siftParam.interviewStatusSift.size() != 0">
                and state in
                    <foreach collection="siftParam.interviewStatusSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            <if test="siftParam.organizationOrderSift.size() != 0">
                and organization_order in
                    <foreach collection="siftParam.organizationOrderSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            <if test="siftParam.departmentOrderSift.size() != 0">
                and department_order in
                    <foreach collection="siftParam.departmentOrderSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            <if test="siftParam.nowDepartmentSift.size() != 0">
                and department_id in
                    <foreach collection="siftParam.nowDepartmentSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            <if test="siftParam.nextTimeSift.size() != 0">
                and ( start_time is null
                          or
                    start_time in
                    <foreach collection="siftParam.nextTimeSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                )
            </if>
            <if test="siftParam.nextPlaceSift.size() != 0">
                and ( admission_address_id is null
                    or
                    admission_address_id in
                    <foreach collection="siftParam.nextPlaceSift" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                )

            </if>
<!--            <if test="siftParam.search != null">-->
<!--                and ( ui.student_id like concat('%', #{siftParam.search}, '%')-->
<!--                or ui.name like concat('%', #{siftParam.search}, '%')-->
<!--                or ui.phone like concat('%', #{siftParam.search}, '%') )-->
<!--            </if>-->
            <if test="siftParam.sort != null">

                <choose>
                    <when test="siftParam.sort.sortId == 1">
                        ORDER BY ui.student_id
                        <if test="siftParam.sort.sortBy == 2">DESC</if>
                    </when>
                    <when test="siftParam.sort.sortId == 2">
                        ORDER BY ui.name
                        <if test="siftParam.sort.sortBy == 2">DESC</if>
                    </when>
                    <when test="siftParam.sort.sortId == 3">
                        ORDER BY start_time
                        <if test="siftParam.sort.sortBy == 2">DESC</if>
                    </when>
                    <when test="siftParam.sort.sortId == 4">
                        ORDER BY admission_address_id
                        <if test="siftParam.sort.sortBy == 2">DESC</if>
                    </when>

                    <!-- Add more cases for other sorting options -->
                    <!-- ... -->
                </choose>

            </if>
    </select>

</mapper>