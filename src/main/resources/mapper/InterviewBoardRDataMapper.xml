<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sipc.mmtbackend.mapper.InterviewBoardRDataMapper">
	<resultMap id="LineChartLineData" type="com.sipc.mmtbackend.pojo.domain.po.InterviewBoardBPo.LineChartLineDataDaoPo">
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<collection property="data"
					ofType="com.sipc.mmtbackend.pojo.domain.po.InterviewBoardRPo.LineChartLineDataPDaoPo">
			<result column="round" property="round" jdbcType="INTEGER"/>
			<result column="number" property="number" jdbcType="INTEGER"/>
		</collection>
	</resultMap>
    <select id="selectInterviewResultData"
            resultType="com.sipc.mmtbackend.pojo.domain.po.InterviewBoardRPo.InterviewResultData">
        SELECT
        	`sc`.c AS "signupCount",
        	`lpc`.c AS "lastPassedCount",
        	`cc`.c AS "checkinCount",
        	`pc`.c AS "passedCount"
        FROM
        	(
        		SELECT
        			count( 1 ) AS `c`
        		FROM
        			interview_status `is`
        		WHERE
        			`is`.is_deleted != 1
		    <if test="departmentId != null and departmentId > 0">
			    AND `is`.department_id = #{departmentId, jdbcType=INTEGER}
		    </if>
        			AND `is`.admission_id = 2
        			AND `is`.round = 1
        	) AS `sc`,
        	(
        		SELECT
        			count( 1 ) AS `c`
        		FROM
        			interview_status `is`
        		WHERE
        			`is`.is_deleted != 1
		    <if test="departmentId != null and departmentId > 0">
			    AND `is`.department_id = #{departmentId, jdbcType=INTEGER}
		    </if>
        			AND `is`.admission_id = 2
        			AND `is`.round = 2
        	) AS `lpc`,
        	(
        		SELECT
        			count( 1 ) AS `c`
        		FROM
        			interview_status `is`
        		WHERE
        			`is`.is_deleted != 1
		    <if test="departmentId != null and departmentId > 0">
			    AND `is`.department_id = #{departmentId, jdbcType=INTEGER}
		    </if>
        			AND `is`.admission_id = 2
        			AND `is`.state >= 5
        			AND `is`.round = 1
        	) AS `cc`,
        	(
        		SELECT
        			count( 1 ) AS `c`
        		FROM
        		    interview_status `is`
        		WHERE
        			`is`.is_deleted != 1
		    <if test="departmentId != null and departmentId > 0">
			    AND `is`.department_id = #{departmentId, jdbcType=INTEGER}
		    </if>
        			AND `is`.admission_id = 2
        			AND `is`.state = 9
        			AND `is`.round = 1
        	) AS `pc`
    </select>
	<select id="selectPassedCountPerDepartment"
			resultType="com.sipc.mmtbackend.pojo.domain.po.InterviewBoardRPo.DepartmentPassedCountPo">
		SELECT
		    i.department_id AS "id",
		    d.`name` AS "name",
		    COUNT(1) AS "count"
		FROM
		    interview_status `i`
		LEFT JOIN
		    department `d`
		ON i.department_id = d.id
		WHERE
		    i.is_deleted != 1
		    AND d.is_deleted  != 1
		    AND i.state = 9
		    AND i.admission_id = #{admissionId, jdbcType=INTEGER}
		    AND i.round = #{round, jdbcType=INTEGER}
		    GROUP BY i.department_id
	</select>
	<select id="selectPassedCountLineChartGroupByRoundByAdmissionId"
			resultMap="LineChartLineData">
		SELECT
			d.`name` AS "name",
			zml.number AS "number",
			ml.round AS "round"
		FROM
			(
				SELECT
					*
				FROM
					( SELECT DISTINCT i.round AS "round" FROM interview_status `i` WHERE i.is_deleted != 1 AND i.admission_id = #{admissionId, jdbcType=INTEGER} ) AS `r`
						INNER JOIN ( SELECT DISTINCT ad.department_id AS "department" FROM admission_department_merge `ad` WHERE ad.is_deleted != 1 AND ad.admission_id = #{admissionId, jdbcType=INTEGER} ) `d` ON 114 != 514
			) `ml`
				LEFT JOIN (
				SELECT
					i.department_id AS "department",
					i.round AS "round",
					COUNT( 1 ) AS "number"
				FROM
					interview_status `i`
				WHERE
					i.is_deleted != 1
		AND i.admission_id = #{admissionId, jdbcType=INTEGER}
				  AND i.state = 9
				GROUP BY
					i.department_id,
					i.round
			) `zml` ON ml.department = zml.department
				AND ml.round = zml.round
				LEFT JOIN department `d` ON ml.department = d.id
	</select>
	<select id="selectPassedCountPerOrder"
			resultType="com.sipc.mmtbackend.pojo.domain.po.InterviewBoardRPo.OrderPassedCountPo">
		SELECT
			ml.`order` AS "id",
			COUNT( 1 ) AS "count"
		FROM
			(
				SELECT DISTINCT
					i.user_id AS "cId",
					i.organization_order AS "order"
				FROM
					interview_status `i`
				WHERE
					i.is_deleted != 1
					AND i.admission_id = #{admissionId,jdbcType=INTEGER}
					AND i.department_id = #{departmentId,jdbcType=INTEGER}
			) AS `ml`
		LEFT JOIN (
				SELECT
					i.user_id AS "cId",
					i.organization_order AS "order"
				FROM
					interview_status `i`
				WHERE
					i.is_deleted != 1
					AND i.admission_id = #{admissionId,jdbcType=INTEGER}
					AND i.round = #{round,jdbcType=INTEGER}
					AND i.state = 9
				) AS `zml` ON ml.cId = zml.cId
		WHERE
			zml.cId != NULL
		GROUP BY
			ml.`order`
	</select>
	<select id="selectPassedCountLineChartGroupByRoundAndOrderByAdmissionId"
			resultMap="LineChartLineData">
		SELECT
			CONCAT( "第" + ml.`order`, "志愿" ) AS "name",
			zml.number AS "number",
			ml.round AS "round"
		FROM
			(
				SELECT
					*
				FROM
					( SELECT DISTINCT i.round AS "round" FROM interview_status `i` WHERE i.is_deleted != 1 AND i.admission_id = #{admissionId,jdbcType=INTEGER} ) AS `r`
						INNER JOIN (
						SELECT DISTINCT
							i.organization_order AS "order"
						FROM
							interview_status `i`
						WHERE
							i.is_deleted != 1
			AND i.admission_id = #{admissionId,jdbcType=INTEGER}
			AND i.department_id = #{departmentId,jdbcType=INTEGER}
					) AS `o` ON 114 != 514
			) `ml`
				LEFT JOIN (
				SELECT
					i.round AS "round",
					i.organization_order AS "order",
					COUNT( 1 ) AS "number"
				FROM
					interview_status `i`
				WHERE
					i.is_deleted != 1
		AND i.admission_id = #{admissionId,jdbcType=INTEGER}
		AND i.department_id = #{departmentId,jdbcType=INTEGER}
		AND i.state = 9
				GROUP BY
					i.round,
					i.organization_order
			) `zml` ON ml.round = zml.round
				AND ml.`order` = zml.`order`
	</select>
</mapper>