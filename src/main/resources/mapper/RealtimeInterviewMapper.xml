<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sipc.mmtbackend.mapper.RealtimeInterviewMapper">
    <resultMap id="InterviewEvaluationAndAnswerData" type="com.sipc.mmtbackend.pojo.domain.po.RealtimeInterviewPo.InterviewEvaluationAndAnswerPo">
        <result column="round" property="round" jdbcType="INTEGER"/>
        <result column="real_name" property="realName" jdbcType="BOOLEAN"/>
        <result column="is_pass" property="isPass" jdbcType="INTEGER"/>
        <result column="expect_department" property="expectDepartment" jdbcType="INTEGER"/>
        <result column="ie_id" property="ieId" jdbcType="INTEGER"/>
        <collection property="questions"
                    ofType="com.sipc.mmtbackend.pojo.domain.po.RealtimeInterviewPo.InterviewEvaluationQAPo">
            <result column="q_id" property="id" jdbcType="INTEGER"/>
            <result column="s_id" property="sId" jdbcType="INTEGER"/>
            <result column="order" property="order" jdbcType="INTEGER"/>
            <result column="q_type" property="qType" jdbcType="INTEGER"/>
            <result column="type" property="type" jdbcType="INTEGER"/>
            <result column="question" property="question" jdbcType="VARCHAR"/>
            <result column="max_score" property="qMaxScore" jdbcType="INTEGER"/>
            <result column="opts" property="qOpts" jdbcType="VARCHAR"/>
            <result column="hint" property="qHint" jdbcType="VARCHAR"/>
            <result column="str" property="aStr" jdbcType="VARCHAR"/>
            <result column="int" property="aInt" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <select id="selectInterviewProgress"
            resultType="com.sipc.mmtbackend.pojo.domain.po.RealtimeInterviewPo.ProgressBarPo">
        SELECT
            zml.`hour` AS `hour`,
            zml.total AS `total`,
            ml.finished AS `finished`
        FROM
            (
                SELECT
                    COUNT( 1 ) AS `total`,
                    z.`hour` AS `hour`
                FROM
                    (
                        SELECT
                            DATE_FORMAT( i.start_time, "%H" ) AS `hour`
                        FROM
                            interview_status i
                                LEFT JOIN user_info ui ON i.user_id = ui.id
                                LEFT JOIN admission_address aa ON i.admission_address_id = aa.id
                        WHERE
                            i.is_deleted != 1
                            AND aa.is_deleted != 1
                            AND DATE_FORMAT ( i.start_time, "%m-%d" ) = DATE_FORMAT ( NOW(), "%m-%d" )
                            AND i.round = #{round,jdbcType=INTEGER}
                            AND i.state >= 5
                            AND i.admission_id = #{admissionId,jdbcType=INTEGER}
                            AND i.admission_address_id = #{place,jdbcType=INTEGER}
                    ) AS `z`
                GROUP BY
                    `hour`
            ) AS `zml`
                LEFT JOIN (
                SELECT
                    COUNT( 1 ) AS `finished`,
                    z.`hour` AS `hour`
                FROM
                    (
                        SELECT
                            DATE_FORMAT( i.start_time, "%H" ) AS `hour`
                        FROM
                            interview_status i
                                LEFT JOIN user_info ui ON i.user_id = ui.id
                                LEFT JOIN admission_address aa ON i.admission_address_id = aa.id
                        WHERE
                            i.is_deleted != 1
                            AND aa.is_deleted != 1
                            AND DATE_FORMAT ( i.start_time, "%m-%d" ) = DATE_FORMAT ( NOW(), "%m-%d" )
                            AND i.round = #{round,jdbcType=INTEGER}
                            AND i.state >= 6
                            AND i.admission_id = #{admissionId,jdbcType=INTEGER}
                            AND i.admission_address_id = #{place,jdbcType=INTEGER}
                    ) AS `z`
                GROUP BY
                    `hour`
            ) AS `ml` ON zml.`hour` = ml.`hour`
    </select>

    <select id="selectRealtimeInterviewData"
            resultType="com.sipc.mmtbackend.pojo.domain.po.RealtimeInterviewPo.InterviewStatusPo">
        SELECT
            `is`.id AS "id",
            `ui`.id AS "cId",
            `ui`.student_id AS "studentId",
            `ui`.`name` AS "name",
            CONCAT( `am`.major, `mc`.class_num, "班" ) AS "className",
            `de`.`name` AS "department",
            DATE_FORMAT( `is`.start_time, "%c/%e %H:%I" ) AS "time",
            `aa`.`name` AS "place",
            `is`.state AS "state"
        FROM
            interview_status `is`
                LEFT JOIN user_info `ui` ON `is`.user_id = `ui`.id
                LEFT JOIN major_class `mc` ON `ui`.major_class_id = `mc`.id
                LEFT JOIN aca_major `am` ON `mc`.major_id = `am`.id
                LEFT JOIN department `de` ON `is`.department_id = `de`.id
                LEFT JOIN admission_address `aa` ON `is`.admission_address_id = `aa`.id
        WHERE
            `is`.is_deleted != 1
            AND `mc`.is_deleted != 1
            AND `am`.is_deleted != 1
            AND `de`.is_deleted != 1
            AND `aa`.is_deleted != 1
            AND DATE_FORMAT ( `is`.start_time, "%m-%d" ) = DATE_FORMAT ( NOW(), "%m-%d" )
            AND `is`.state >= 3
            AND `is`.state &lt;= 7
            AND `is`.admission_id = #{admissionId, jdbcType=INTEGER}
            AND `is`.admission_address_id = #{place, jdbcType=INTEGER}
            AND `is`.round = #{round,jdbcType=INTEGER}
            AND (
                `ui`.student_id LIKE concat('%',#{keyword,jdbcType=VARCHAR},'%')
                OR `ui`.student_id LIKE concat('%',#{keyword,jdbcType=VARCHAR},'%') )
        ORDER BY
            `is`.state ASC,
            `is`.state ASC
    </select>

    <select id="selectAllInterviewEvaluationQnAByBCUID"
            resultMap="InterviewEvaluationAndAnswerData">
        SELECT
        	`is`.round AS "round",
        	ie.real_name AS "real_name",
        	ie.pass_department_id AS "expect_department",
            ie.is_pass AS "is_pass",
        	iq.`order` AS "order",
        	iq.question_type AS "q_type",
        	iq.type AS "type",
        	qd.question AS "question",
        	qd.num AS "max_score",
        	qd.`value` AS "opts",
        	qd.answer AS "hint",
        	qs.score AS "int",
        	qs.`value` AS "str",
            iq.id AS "q_id"
        FROM
        	interview_evaluation `ie`
        	RIGHT JOIN interview_status `is` ON ie.interview_status_id = `is`.id
        	LEFT JOIN interview_question iq ON `is`.admission_id = iq.admission_id
        	LEFT JOIN question_data qd ON iq.question_id = qd.id
        	LEFT JOIN question_score qs ON `is`.id = qs.interview_status_id
        WHERE
        	`is`.round = iq.round
        	AND ie.user_b_id = qs.user_b_id
        	AND ie.is_deleted != 1
        	AND `is`.is_deleted != 1
        	AND iq.is_deleted != 1
        	AND qd.is_deleted != 1
        	AND `is`.admission_id = #{admissionId,jdbcType=INTEGER}
        	AND `is`.user_id = #{cId,jdbcType=INTEGER}
        	AND ie.user_b_id = #{bId,jdbcType=INTEGER}
        ORDER BY `is`.round ASC, iq.question_type ASC, qd.id ASC
    </select>

    <select id="selectlatestInterviewEvaluationQnA"
            resultMap="InterviewEvaluationAndAnswerData">
        SELECT
            `is`.round AS "round",
            ie.real_name AS "real_name",
            ie.pass_department_id AS "expect_department",
            iq.`order` AS "order",
            iq.question_type AS "q_type",
            iq.type AS "type",
            qd.question AS "question",
            qd.num AS "max_score",
            qd.`value` AS "opts",
            qd.answer AS "hint",
            qs.score AS "int",
            qs.`value` AS "str",
            iq.id AS "q_id",
            qs.id AS "s_id",
            ie.id AS "e_id",
            ie.is_pass AS "is_pass"
        FROM
            interview_evaluation `ie`
                RIGHT JOIN interview_status `is` ON ie.interview_status_id = `is`.id
                LEFT JOIN interview_question iq ON `is`.admission_id = iq.admission_id
                LEFT JOIN question_data qd ON iq.question_id = qd.id
                LEFT JOIN question_score qs ON `is`.id = qs.interview_status_id
        WHERE
            `is`.round = iq.round
            AND ie.user_b_id = qs.user_b_id
            AND ie.is_deleted != 1
            AND `is`.is_deleted != 1
            AND iq.is_deleted != 1
            AND qd.is_deleted != 1
        	AND `is`.id = #{iId,jdbcType=INTEGER}
            AND ie.user_b_id = #{bId,jdbcType=INTEGER}
        ORDER BY qd.id ASC
    </select>
</mapper>